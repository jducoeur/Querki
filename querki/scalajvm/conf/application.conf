# Configuration information for Querki
# IMPORTANT: this is now *public* information, checked into GitHub. That being the case, there must *never* be
# any secrets contained in here. All secrets belong in Secrets Manager; when in doubt, put it there, not here.

# This file is the *common* configuration information. Stuff that is specific to local development should go into
# local.conf; stuff for the running production system goes into prod.conf. (Both of which are included at the bottom;
# whichever matches the current environment will be merged up into the main config.) The majority of config is in
# those two files.

# Querki configuration
querki {
  test {
    replyMsg : " from Akka Config! This is call number "
    logContexts : false
    logEdits : false
    logAllRequests: false
    
    traceApiCalls : false
    traceConversations : false
    traceSpaces : false
  }

  admin {
    # The interval for sending heartbeats to the AdminMonitor
    monitorHeartbeat : 1 minute
    # How long to wait before concluding that a monitor is dead 
    monitorTimeout : 3 minutes
    logMonitor : false
  }
  
  api {
    timeout : 60 seconds
  }

  security {
    hashIterations : 20000
  }
}

play.http.session {
  # By default, we give a one-month timeout on sessions
  # This key is undocumented but crucial!
  maxAge : 2592000000
}

# Dispatcher for UserSessions    
session-dispatcher {
  # UserSession Actors need a DequeBasedMailbox, so they can use Stash:
  mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
}

play.application.loader = "querki.system.QuerkiApplicationLoader"
play.http.filters = "querki.system.Filters"

# Redirect Play's Akka configuration to a different node. This is necessary: if Play's
# Actor system and our own load from the same config, they conflict. See:
#
#   https://www.playframework.com/documentation/2.4.x/ScalaAkka#Using-your-own-Actor-system
#
# and
#
#   https://www.playframework.com/documentation/2.4.x/ScalaAkka#Changing-configuration-prefix
#
# Note also Case 6695 with Lightbend, which points out that you need to have the full akka
# structure *under* this named node, and that Play will fall back to the usual akka config
# for anything not defined here.
play.akka.config = "play-akka"

play-akka {
  akka {
    remote {
      log-remote-lifecycle-events = off
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2552
      }
    }
    
    cluster {
      # See local/prod.conf
    }
  }
}

akka {
#  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  loglevel = "INFO"
  debug {
    lifecycle = off
  }

  remote {
    log-remote-lifecycle-events = off
    # TODO: is this relevant any more, or have we switched to akka-http?
    netty.tcp {
      hostname = "127.0.0.1"
      # Note that port is currently different on local vs prod
    }
  }

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    # Turn these on in local.conf when needed:
    debug {
      # Enables LoggingReceive
      receive = off
      # Turns on logging of special system messages
      autoreceive = off
      # Turns on logging of actor lifecycle events
      lifecycle = off
    }
  }
}

include "persistence.conf"

# The application languages
# Someday we'll localize, but we have bigger fish to fry for now
# ~~~~~
play.i18n.langs=[ "en", "en-US" ]

# These contain the local-dev, test and production settings in sub-namespaces. Whichever is appropriate will be
# merged into the main config settings above.
include "local.conf"
include "test.conf"
include "prod.conf"
