# Config values for the Production Querki environment
# This gets merged into the main values in application.conf in the real running env.
# IMPORTANT: there must *NEVER* be any secrets in here! When it doubt, put things into Secrets Manager. This is
# entirely public information.

prod {
  querki {
    akka {
      # The default timeout unless stated otherwise:
      timeout: 1 minute
    }

    app {
      urlRoot: "https://www.querki.net/"
    }

    apps {
      chunksize : 10000
    }

    aws {
      bucket : "querki"
      bucketUrl : "//s3-us-west-2.amazonaws.com/querki"
      region : "us-east-1"
      # The name of the HOCON file in Secrets Manager that contains the configuration for the secrets:
      secretsName : "querki/app/secrets"
    }

    cluster {
      # How many nodes do we expect in this cluster?
      # For now, we've dropped to single-node, for ease of development. We'll eventually want to scale this
      # back up to a proper cluster.
      size : 1
      # How long we allow for re-finding a Shard before we decide it is dead:
      shardRelookupTimeout : 10 minutes
      # How often should the QuerkiNodeCoordinator save a snapshot:
      snapshotInterval : 100
      # The number of OIDs to reserve at a time. This is a serious tuning parameter. Higher
      # means better latency for OID allocation requests, at the cost of more gaps in the
      # OID namespace.
      allocBlockSize : 10
      # How often to snapshot the state of each OIDAllocator, in blocks.
      allocSnapshotInterval : 10
      # Signal to use the Cassandra machinery to allocate OIDs.
      newObjCreate : true
      # Split-brain config parameters:
      unreachable {
        timeout : 120 seconds
      }
    }

    conversations {
      timeout : 3 minutes
    }

    debug {
      space {
        # Spirit Island Playtesting
        7w4g8ts {
          trace : true
          # Super-long timeout, because this Space is currently ridiculously slow to load. This should be able
          # to go away once that bug is fixed.
          timeout : 1440 minutes
        }
      }
    }

    history {
      timeout : 15 minutes
    }

    mail {
      smtpHost : "email-smtp.us-east-1.amazonaws.com"
      # TODO: is this right? It's from the old running system, but the code seems to want "port", not "smtpPort". Odd...
      smtpPort : 25
      from : "userEmails@querki.net"
      systemFrom : "querki@querki.net"
      systemName : "Querki"
      debug : false
      identityTimeout : 5 minutes
      throttle : 5 seconds
    }

    # TODO: these were named "public" because they were originally the only publicly-visible parts of config.
    # That's no longer true, so move these to a more appropriate name.
    public {
      maxSpaces : 500
      maxMembersPerSpace : 500
    }

    publication {
      log : false
    }

    redirect {
      from : "www.querki.net"
      to : "https://querki.net"
    }

    session {
      # Time before a UserSession times out for inactivity
      timeout : 5 minutes
    }

    space {
      # Time before a Space times out for inactivity
      timeout : 30 minutes
      snapshotInterval : 100
      newPersist : true
    }

    stream {
      stringChunkSize : 10000
    }

    userSession {
      timeout : 30 minutes
      collaborators : {
        timeout : 15 minutes
      }
    }
  }

  # TODO: this is bad! We really need to settle on a better serializer, rather
  # than ignoring the warning like this! Now that we've dropped down to single-node,
  # it's a good time to fix this.
  akka.actor.warn-about-java-serializer-usage : false

  akka {
    remote {
      netty.tcp {
        port = 2551
      }
    }

    cluster {
      seed-nodes = [
        "akka.tcp://application@127.0.0.1:2551"
      ]
    }

    actor {
    }
  }

  db.system.driver=com.mysql.jdbc.Driver
  db.system.url="jdbc:mysql://ae-prod-querki-db01/querki_system_prod_db?characterEncoding=UTF-8"
  db.system.logStatements=false

  db.user.driver=com.mysql.jdbc.Driver
  db.user.url="jdbc:mysql://ae-prod-querki-db01/querki_user_prod_db?characterEncoding=UTF-8"
  db.user.logStatements=false

  play-akka {
    akka {
      cluster {
        seed-nodes = [
          "akka.tcp://querki-server-2@127.0.0.1:2552"
        ]
      }
    }
  }

  play.http.session {
    # Require HTTPS for all sessions in Prod:
    secure : true
  }

  # Theoretically, this should preserve the original request address:
  trustxforwarded=true
}
